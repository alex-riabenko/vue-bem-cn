{"version":3,"file":"vue-bem-cn.umd.min.js","sources":["../src/bem-cn/bem-names.js","../src/utils.js","../src/vue-plugin.js","../src/bem-cn/index.js"],"sourcesContent":["import { isPObject, isString } from '../utils';\n\n/**\n * Create String from BEM entitys\n * @param {Object} entitys BEM entitys\n * @param {String} entitys.block Block\n * @param {String} [entitys.el] Element\n * @param {Object<string>} [entitys.mods] Modifiers\n * @param {String} [entitys.mixin] Mixin\n * @param {Object<string>} delimiters Delimiters for BEM entitys\n * @returns {String}\n */\nexport default function bemNames(entitys, delimiters) {\n  let resultString = '';\n  const names = entitys || { mods: {}, mixin: '' };\n  const delims = {\n    ns: '',\n    el: '__',\n    mod: '--',\n    modVal: '-',\n    ...delimiters,\n  };\n  const mixin = isString(names.mixin) ? ' ' + names.mixin : '';\n\n  if (!names.block) return '';\n  resultString = delims.ns ? delims.ns + names.block : names.block;\n\n  if (names.el) resultString += delims.el + names.el;\n\n  if (isPObject(names.mods)) {\n    resultString += Object.keys(names.mods).reduce((prev, name) => {\n      const val = names.mods[name];\n      /* eslint-disable no-param-reassign */\n      if (val === true) {\n        prev += ' ' + resultString + delims.mod + name;\n      } else if (isString(val)) {\n        prev += ' ' + resultString + delims.mod + name + delims.modVal + names.mods[name];\n      }\n      /* eslint-enable no-param-reassign */\n\n      return prev;\n    }, '');\n  }\n  return resultString + mixin;\n}\n","export const isString = val => val && typeof val === 'string' && val.length > 0;\nexport const isPObject = val =>\n  val &&\n  typeof val === 'object' &&\n  val !== null &&\n  val.constructor === Object &&\n  Object.keys(val).length > 0;\n\nexport const hyphenate = str => str.replace(/\\B([A-Z])/g, '-$1').toLowerCase();\n","import bemCn from './bem-cn/index';\n\nexport default {\n  install(Vue, config = { delimiters: {} }) {\n    const cfg = {\n      hyphenate: false,\n      methodName: 'b',\n      ...config,\n      delimiters: {\n        ns: '',\n        el: '__',\n        mod: '--',\n        modVal: '-',\n        ...config.delimiters,\n      },\n    };\n\n    Vue.mixin({\n      created() {\n        const block = this.$options.block || this.$options.name;\n        let generator = null;\n\n        if (typeof block !== 'string') return;\n\n        generator = bemCn(block, cfg);\n        this[cfg.methodName] = (...args) => generator(...args);\n      },\n    });\n  },\n};\n","import { isString, isPObject, hyphenate } from '../utils';\nimport bemNames from './bem-names';\n\nexport default function bemCn(block, opt = { delimiters: {} }) {\n  const options = {\n    hyphenate: false,\n    ...opt,\n    delimiters: {\n      ...opt.delimiters,\n    },\n  };\n  if (!isString(block)) return '';\n\n  return function entitys(elem, mods, mix) {\n    const resultObj = {\n      block,\n      el: '',\n      mods: {},\n      mixin: '',\n    };\n\n    if (isPObject(mods)) resultObj.mods = mods;\n\n    if (isString(elem)) {\n      resultObj.el = elem;\n    } else if (isPObject(elem)) {\n      resultObj.mods = elem;\n    }\n\n    if (isString(mods)) {\n      resultObj.mixin =\n        resultObj.mixin.length > 0 ? `${resultObj.mixin} ${mods}` : resultObj.mixin + mods;\n    }\n    if (isString(mix)) {\n      resultObj.mixin =\n        resultObj.mixin.length > 0 ? `${resultObj.mixin} ${mix}` : resultObj.mixin + mix;\n    }\n\n    if (options.hyphenate) {\n      return hyphenate(bemNames(resultObj, options.delimiters));\n    }\n\n    return bemNames(resultObj, options.delimiters);\n  };\n}\n"],"names":["bemNames","entitys","delimiters","resultString","names","mods","mixin","delims","isString","block","ns","el","isPObject","Object","keys","reduce","prev","name","val","mod","modVal","length","constructor","hyphenate","str","replace","toLowerCase","Vue","config","cfg","this","$options","generator","opt","options","elem","mix","resultObj","bemCn","methodName"],"mappings":"oLAYA,SAAwBA,EAASC,EAASC,OACpCC,EAAe,GACbC,EAAQH,IAAaI,QAAUC,MAAO,IACtCC,QACA,MACA,SACC,YACG,KACLL,GAECI,EAAQE,EAASJ,EAAME,OAAS,IAAMF,EAAME,MAAQ,UAErDF,EAAMK,SACIF,EAAOG,GAAKH,EAAOG,GAAKN,EAAMK,MAAQL,EAAMK,MAEvDL,EAAMO,KAAIR,GAAgBI,EAAOI,GAAKP,EAAMO,IAE5CC,EAAUR,EAAMC,WACFQ,OAAOC,KAAKV,EAAMC,MAAMU,OAAO,SAACC,EAAMC,OAC9CC,EAAMd,EAAMC,KAAKY,UAEX,IAARC,KACM,IAAMf,EAAeI,EAAOY,IAAMF,EACjCT,EAASU,QACV,IAAMf,EAAeI,EAAOY,IAAMF,EAAOV,EAAOa,OAAShB,EAAMC,KAAKY,IAIvED,GACN,KAEEb,EAAeG,GAnBG,uXCxBdE,EAAW,mBAAOU,GAAsB,iBAARA,GAAoBA,EAAIG,OAAS,GACjET,EAAY,mBACvBM,GACe,qBAARA,gBAAAA,KACC,OAARA,GACAA,EAAII,cAAgBT,QACpBA,OAAOC,KAAKI,GAAKG,OAAS,GAEfE,EAAY,mBAAOC,EAAIC,QAAQ,aAAc,OAAOC,uCCLvDC,OAAKC,0DAAW1B,eAChB2B,gBACO,aACC,KACTD,oBAEG,MACA,SACC,YACG,KACLA,EAAO1B,gBAIVI,8BAEMG,EAAQqB,KAAKC,SAAStB,OAASqB,KAAKC,SAASd,KAC/Ce,EAAY,KAEK,iBAAVvB,MCnBJ,SAAeA,OAAOwB,0DAAQ/B,eACrCgC,gBACO,GACRD,mBAEEA,EAAI/B,qBAGNM,EAASC,GAEP,SAAiB0B,EAAM9B,EAAM+B,OAC5BC,cAEA,iBAEG,WAGLzB,EAAUP,KAAOgC,EAAUhC,KAAOA,GAElCG,EAAS2B,KACDxB,GAAKwB,EACNvB,EAAUuB,OACT9B,KAAO8B,GAGf3B,EAASH,OACDC,MACR+B,EAAU/B,MAAMe,OAAS,EAAOgB,EAAU/B,UAASD,EAASgC,EAAU/B,MAAQD,GAE9EG,EAAS4B,OACD9B,MACR+B,EAAU/B,MAAMe,OAAS,EAAOgB,EAAU/B,UAAS8B,EAAQC,EAAU/B,MAAQ8B,GAG7EF,EAAQX,UACHA,EAAUvB,EAASqC,EAAWH,EAAQhC,aAGxCF,EAASqC,EAAWH,EAAQhC,aA/BR,GDaXoC,CAAM7B,EAAOoB,QACpBA,EAAIU,YAAc,kBAAaP"}